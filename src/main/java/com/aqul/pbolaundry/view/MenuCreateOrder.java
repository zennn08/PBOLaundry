/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.aqul.pbolaundry.view;

import com.aqul.pbolaundry.Credential;
import com.aqul.pbolaundry.Database;
import com.aqul.pbolaundry.Service;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author LENOVO
 */
public class MenuCreateOrder extends javax.swing.JPanel {

    private Credential creds;
    /**
     * Creates new form menuCreateOrder
     */

    /**
     * Creates new form menuCreateOrder
     * @param creds
     */
    public MenuCreateOrder(Credential creds) {
        initComponents();
        this.creds = creds;
        
        // Query ke database untuk melihat service apa saja yang tersedia
        try {
            Statement state = Database.Connect().createStatement();
            String query = "SELECT * FROM service;";
            ResultSet result = state.executeQuery(query);
            
            weigthTextField.setText("0");
            
            while (result.next()) {
                int id = result.getInt("id");
                String name = result.getString("name");
                int price = result.getInt("price");
                Service service = new Service(id, name, price);
                serviceComboBox.addItem(service);
            }
        } catch (SQLException e) {
            System.err.println("SQLException : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();
        customerNameTextField = new com.aqul.pbolaundry.palette.Custom_JTextFieldRounded();
        customerPhoneLabel = new javax.swing.JLabel();
        customerPhoneTextField = new com.aqul.pbolaundry.palette.Custom_JTextFieldRounded();
        serviceLabel = new javax.swing.JLabel();
        serviceComboBox = new javax.swing.JComboBox<>();
        weigthLabel = new javax.swing.JLabel();
        weigthTextField = new com.aqul.pbolaundry.palette.Custom_JTextFieldRounded();
        priceLabel = new javax.swing.JLabel();
        priceTextField = new com.aqul.pbolaundry.palette.Custom_JTextFieldRounded();
        createOrderButton = new com.aqul.pbolaundry.palette.Custom_JButtonRounded();
        customerNameAlert = new javax.swing.JLabel();
        customerPhoneAlert = new javax.swing.JLabel();
        weigthAlert = new javax.swing.JLabel();

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-order-30.png"))); // NOI18N

        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel.setText("Create Order");

        customerNameLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        customerNameLabel.setText("Nama Pelanggan");

        customerPhoneLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        customerPhoneLabel.setText("No. HP Pelanggan");

        customerPhoneTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customerPhoneTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customerPhoneTextFieldKeyTyped(evt);
            }
        });

        serviceLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        serviceLabel.setText("Layanan");

        serviceComboBox.setFocusable(false);
        serviceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceComboBoxActionPerformed(evt);
            }
        });
        serviceComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serviceComboBoxKeyReleased(evt);
            }
        });

        weigthLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        weigthLabel.setText("Berat (Kg)");

        weigthTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                weigthTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                weigthTextFieldKeyTyped(evt);
            }
        });

        priceLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        priceLabel.setText("Harga");

        priceTextField.setEditable(false);

        createOrderButton.setText("CREATE ORDER");
        createOrderButton.setFillClick(new java.awt.Color(41, 128, 220));
        createOrderButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        createOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createOrderButtonActionPerformed(evt);
            }
        });

        customerNameAlert.setForeground(new java.awt.Color(255, 0, 0));

        customerPhoneAlert.setForeground(new java.awt.Color(255, 0, 0));

        weigthAlert.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(weigthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(priceTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                                .addComponent(weigthTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(weigthAlert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(logo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(titleLabel)
                            .addGap(0, 601, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(serviceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(customerPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                            .addGap(66, 66, 66)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(serviceComboBox, 0, 558, Short.MAX_VALUE)
                                .addComponent(customerPhoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                                .addComponent(customerNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                                .addComponent(customerNameAlert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customerPhoneAlert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(customerNameAlert)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(customerPhoneAlert)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serviceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weigthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weigthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(weigthAlert)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(createOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseDragged

    private void createOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createOrderButtonActionPerformed
        double weigth = 0;
        double estimasiHarga = 0;
        String customerName = customerNameTextField.getText();
        String customerPhone = customerPhoneTextField.getText();
        Service service = (Service) serviceComboBox.getSelectedItem();
        boolean lanjut = true;
        
        weigthAlert.setText("");
        customerNameAlert.setText("");
        customerPhoneAlert.setText("");
        priceTextField.setText("");
       
        try {
            weigth = Double.parseDouble(weigthTextField.getText());
            estimasiHarga = service.getPrice() * weigth;
            priceTextField.setText("Rp. " + String.format("%.2f", estimasiHarga));
        } catch (NumberFormatException e) {
            weigthAlert.setText("Estimasi berat tidak valid!");
            lanjut = false;
        }
        
        if (customerName.isEmpty()) {
            customerNameAlert.setText("Harap isi nama pelanggan!");
            lanjut = false;
        }
        
        if (customerPhone.isEmpty()) {
            customerPhoneAlert.setText("Harap isi nomor hp pelanggan!");
            lanjut = false;
        } else {
            String regexPhone = "^08[1-9][0-9]{7,10}$";
            Pattern pattern = Pattern.compile(regexPhone);
            Matcher matcher = pattern.matcher(customerPhone);
            if (!matcher.matches()) {
                customerPhoneAlert.setText("Nomor hp pelanggan tidak valid!");
                lanjut = false;
            }
        }
        
        if (lanjut) {
            try {
                Connection conn = Database.Connect();
                String queryFindUser = "SELECT * FROM user WHERE phone_number = ?";
                PreparedStatement findUserStatement = conn.prepareStatement(queryFindUser);
                findUserStatement.setString(1, customerPhone);
                ResultSet result = findUserStatement.executeQuery();

                int userId = -1;
                if (result.next()) {
                    userId = result.getInt("id");
                } else {
                    String queryInsertUser = "INSERT INTO user (nama, phone_number) VALUES (?, ?)";
                    PreparedStatement insertUserStatement = conn.prepareStatement(queryInsertUser, Statement.RETURN_GENERATED_KEYS);
                    insertUserStatement.setString(1, customerName);
                    insertUserStatement.setString(2, customerPhone);
                    int rowsInserted = insertUserStatement.executeUpdate();
                    
                    if (rowsInserted > 0) {
                        ResultSet resultInsert = insertUserStatement.getGeneratedKeys();
                        if (resultInsert.next()) {
                            userId = resultInsert.getInt(1);
                        } else {
                            throw new SQLException("Failed to retrieve user ID after insert");
                        }
                    } else {
                        throw new SQLException("Failed to insert user");
                    }
                }

                if (userId != -1) {
                    String queryInsertOrder = "INSERT INTO orders (order_id, user_id, service_id, admin_id, status, amount, order_date, total_price, customer_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                    PreparedStatement pstmt = conn.prepareStatement(queryInsertOrder);
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    String orderId = generateOrderID();
                    // Mengisi nilai untuk parameter query
                    pstmt.setString(1, orderId); // Kolom order_id
                    pstmt.setInt(2, userId);        // Kolom user_id
                    pstmt.setInt(3, service.getId());     // Kolom service_id
                    pstmt.setInt(4, creds.getId());       // Kolom admin_id
                    pstmt.setString(5, "Received");     // Kolom status
                    pstmt.setDouble(6, weigth);      // Kolom amount
                    pstmt.setString(7, dateFormat.format(new Date()));  // Kolom order_date (pastikan format tanggal sesuai)
                    pstmt.setInt(8, (int) Math.round(estimasiHarga));   // Kolom total_price
                    pstmt.setString(9, customerName); // Kolom customer_name

                    // Eksekusi query INSERT
                    int rowsInserted = pstmt.executeUpdate();

                    // Cek apakah data berhasil dimasukkan
                    if (rowsInserted > 0) {
                        int response = JOptionPane.showConfirmDialog(this, "Order berhasil dibuat. Apakah anda ingin mencetak struk?", "Success", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                        if (response == JOptionPane.YES_OPTION) {
                            cetakInvoice(orderId);
                        }
                        clearForm();
                    }
                }
            } catch (SQLException e) {
                System.err.println("SQLException : " + e.getMessage());
            }
        }
    }//GEN-LAST:event_createOrderButtonActionPerformed

    private void customerPhoneTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerPhoneTextFieldKeyPressed

    }//GEN-LAST:event_customerPhoneTextFieldKeyPressed

    private void customerPhoneTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerPhoneTextFieldKeyTyped
        char key = evt.getKeyChar();

        // Jika karakter bukan angka, batalkan event
        if (!Character.isDigit(key)) {
            evt.consume();
        }
    }//GEN-LAST:event_customerPhoneTextFieldKeyTyped

    private void weigthTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weigthTextFieldKeyTyped
        char key = evt.getKeyChar();

        // Jika karakter bukan angka, batalkan event
        if (!Character.isDigit(key) && key != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_weigthTextFieldKeyTyped

    private void weigthTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weigthTextFieldKeyReleased
        updatePrice();
    }//GEN-LAST:event_weigthTextFieldKeyReleased

    private void serviceComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serviceComboBoxKeyReleased
        updatePrice();
    }//GEN-LAST:event_serviceComboBoxKeyReleased

    private void serviceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceComboBoxActionPerformed
        updatePrice();
    }//GEN-LAST:event_serviceComboBoxActionPerformed

    public void clearForm() {
        customerNameTextField.setText("");
        customerPhoneTextField.setText("");
        weigthTextField.setText("0");
        priceTextField.setText("");
    }
    
    public void updatePrice() {
        double weigth = 0;
        double estimasiHarga = 0;
        Service service = (Service) serviceComboBox.getSelectedItem();
        try {
            weigth = Double.parseDouble(weigthTextField.getText());
            estimasiHarga = service.getPrice() * weigth;
            priceTextField.setText("Rp. " + String.format("%.2f", estimasiHarga));
            weigthAlert.setText("");
        } catch (NumberFormatException e) {
            weigthAlert.setText("Estimasi berat tidak valid!");
        }
    }

    public String generateOrderID() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyMMddHHmmssSSS");
        Date date = new Date();
        return "ORD" + formatter.format(date);
    }
    
    private void cetakInvoice(String orderId) {
        try {
            String invoicePath = "src/main/resources/Invoice.jasper";
            HashMap<String, Object> params = new HashMap<>();
            params.put("OrderId", orderId);
            JasperPrint print = JasperFillManager.fillReport(invoicePath, params, Database.Connect());
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);
        } catch (SQLException | JRException ex) {
            System.err.println("PrintErr : " + ex.getMessage());
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.aqul.pbolaundry.palette.Custom_JButtonRounded createOrderButton;
    private javax.swing.JLabel customerNameAlert;
    private javax.swing.JLabel customerNameLabel;
    private com.aqul.pbolaundry.palette.Custom_JTextFieldRounded customerNameTextField;
    private javax.swing.JLabel customerPhoneAlert;
    private javax.swing.JLabel customerPhoneLabel;
    private com.aqul.pbolaundry.palette.Custom_JTextFieldRounded customerPhoneTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel priceLabel;
    private com.aqul.pbolaundry.palette.Custom_JTextFieldRounded priceTextField;
    private javax.swing.JComboBox<Service> serviceComboBox;
    private javax.swing.JLabel serviceLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel weigthAlert;
    private javax.swing.JLabel weigthLabel;
    private com.aqul.pbolaundry.palette.Custom_JTextFieldRounded weigthTextField;
    // End of variables declaration//GEN-END:variables
}
