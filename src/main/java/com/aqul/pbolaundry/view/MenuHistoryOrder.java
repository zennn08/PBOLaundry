/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.aqul.pbolaundry.view;

import com.aqul.pbolaundry.Database;
import com.aqul.pbolaundry.Order;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.temporal.TemporalAdjusters;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author LENOVO
 */
public class MenuHistoryOrder extends javax.swing.JPanel {

    /**
     * Creates new form MenuHistoryOrder
     */
    public MenuHistoryOrder() {
        initComponents();
        getListOrder();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser = new com.raven.datechooser.DateChooser();
        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        todayPanel = new com.aqul.pbolaundry.palette.Custom_JPanelRounded();
        todayLabel = new javax.swing.JLabel();
        todayField = new javax.swing.JLabel();
        todayIcon = new javax.swing.JLabel();
        weekPanel = new com.aqul.pbolaundry.palette.Custom_JPanelRounded();
        weekLabel = new javax.swing.JLabel();
        weekField = new javax.swing.JLabel();
        weekIcon = new javax.swing.JLabel();
        monthPanel = new com.aqul.pbolaundry.palette.Custom_JPanelRounded();
        monthLabel = new javax.swing.JLabel();
        monthField = new javax.swing.JLabel();
        monthIcon = new javax.swing.JLabel();
        dateChooserField = new com.aqul.pbolaundry.palette.Custom_JTextFieldRounded();
        printButton = new com.aqul.pbolaundry.palette.Custom_JButtonRounded();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new com.aqul.pbolaundry.palette.Custom_JTable();

        dateChooser.setDateFormat(new SimpleDateFormat("yyyy-MM-dd"));
        dateChooser.setDateSelectionMode(com.raven.datechooser.DateChooser.DateSelectionMode.BETWEEN_DATE_SELECTED);
        dateChooser.setTextField(dateChooserField);

        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel.setText("History Order");

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-history-30.png"))); // NOI18N

        todayPanel.setBackground(new java.awt.Color(0, 255, 255));
        todayPanel.setRoundBottomLeft(20);
        todayPanel.setRoundBottomRight(20);
        todayPanel.setRoundTopLeft(20);
        todayPanel.setRoundTopRight(20);

        todayLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        todayLabel.setText("Today");

        todayField.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        todayField.setForeground(new java.awt.Color(30, 58, 138));
        todayField.setText("Rp. 100.000");

        todayIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-today-50.png"))); // NOI18N

        javax.swing.GroupLayout todayPanelLayout = new javax.swing.GroupLayout(todayPanel);
        todayPanel.setLayout(todayPanelLayout);
        todayPanelLayout.setHorizontalGroup(
            todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todayPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(todayPanelLayout.createSequentialGroup()
                        .addComponent(todayField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(todayPanelLayout.createSequentialGroup()
                        .addComponent(todayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(todayIcon)
                        .addGap(15, 15, 15))))
        );
        todayPanelLayout.setVerticalGroup(
            todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todayPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(todayLabel)
                    .addComponent(todayIcon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(todayField)
                .addGap(15, 15, 15))
        );

        weekPanel.setBackground(new java.awt.Color(0, 255, 255));
        weekPanel.setRoundBottomLeft(20);
        weekPanel.setRoundBottomRight(20);
        weekPanel.setRoundTopLeft(20);
        weekPanel.setRoundTopRight(20);

        weekLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        weekLabel.setText("This Week");

        weekField.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        weekField.setForeground(new java.awt.Color(30, 58, 138));
        weekField.setText("Rp. 100.000");

        weekIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-minus-1-week-50.png"))); // NOI18N

        javax.swing.GroupLayout weekPanelLayout = new javax.swing.GroupLayout(weekPanel);
        weekPanel.setLayout(weekPanelLayout);
        weekPanelLayout.setHorizontalGroup(
            weekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weekPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(weekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(weekPanelLayout.createSequentialGroup()
                        .addComponent(weekField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(weekPanelLayout.createSequentialGroup()
                        .addComponent(weekLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(weekIcon)
                        .addGap(15, 15, 15))))
        );
        weekPanelLayout.setVerticalGroup(
            weekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weekPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(weekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weekLabel)
                    .addComponent(weekIcon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(weekField)
                .addGap(15, 15, 15))
        );

        monthPanel.setBackground(new java.awt.Color(0, 255, 255));
        monthPanel.setRoundBottomLeft(20);
        monthPanel.setRoundBottomRight(20);
        monthPanel.setRoundTopLeft(20);
        monthPanel.setRoundTopRight(20);

        monthLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        monthLabel.setText("This Month");

        monthField.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        monthField.setForeground(new java.awt.Color(30, 58, 138));
        monthField.setText("Rp. 100.000");

        monthIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-month-50.png"))); // NOI18N

        javax.swing.GroupLayout monthPanelLayout = new javax.swing.GroupLayout(monthPanel);
        monthPanel.setLayout(monthPanelLayout);
        monthPanelLayout.setHorizontalGroup(
            monthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monthPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(monthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(monthPanelLayout.createSequentialGroup()
                        .addComponent(monthField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(monthPanelLayout.createSequentialGroup()
                        .addComponent(monthLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(monthIcon)
                        .addGap(15, 15, 15))))
        );
        monthPanelLayout.setVerticalGroup(
            monthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monthPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(monthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monthLabel)
                    .addComponent(monthIcon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(monthField)
                .addGap(15, 15, 15))
        );

        dateChooserField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateChooserFieldActionPerformed(evt);
            }
        });

        printButton.setText("PRINT");
        printButton.setFillClick(new java.awt.Color(41, 128, 220));
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(orderTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleLabel)
                        .addGap(307, 307, 307)
                        .addComponent(dateChooserField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(todayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(weekPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(monthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(43, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(printButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateChooserField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monthPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(todayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weekPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        String dateChoose = dateChooserField.getText();
        String[] date = dateChoose.split(" to ");
        try {
            String invoicePath = "src/main/resources/Report.jasper";
            HashMap<String, Object> params = new HashMap<>();
            params.put("beforeDate", date[0] + " 00:00:00");
            params.put("afterDate", (date.length > 1 ? date[1] : date[0]) + " 23:59:59");
            JasperPrint print = JasperFillManager.fillReport(invoicePath, params, Database.Connect());
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);
        } catch (SQLException | JRException ex) {
            System.err.println("PrintErr : " + ex.getMessage());
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void dateChooserFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateChooserFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserFieldActionPerformed

    private void getListOrder() {
        String[] coloumn = {"Order ID", "Tanggal", "Nama", "No. HP", "Status", "Layanan", "Berat", "Harga"};
        DefaultTableModel table = new DefaultTableModel(null, coloumn){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        List<Order> ordersToday = new ArrayList<>();
        List<Order> ordersThisWeek = new ArrayList<>();
        List<Order> ordersThisMonth = new ArrayList<>();
        try {
            LocalDate today = LocalDate.now();
            LocalDate startOfWeek = today.with(TemporalAdjusters.previousOrSame(java.time.DayOfWeek.MONDAY));
            LocalDate startOfMonth = today.with(TemporalAdjusters.firstDayOfMonth());
            
            String query = "SELECT * FROM orders JOIN user ON orders.user_id = user.id JOIN service ON orders.service_id = service.id ORDER BY orders.order_date ASC;";
            Connection conn = Database.Connect();
            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery(query);
            
            while (result.next()) {
                String id = result.getString("order_id");
                LocalDateTime tanggal = result.getTimestamp("order_date").toLocalDateTime();
                String nama = result.getString("customer_name");
                String noHp = result.getString("phone_number");
                String status = result.getString("status");
                String layanan = result.getString("name");
                String berat = result.getString("amount");
                int harga = result.getInt("total_price");
                
                Order order = new Order(id, tanggal, nama, noHp, status, layanan, berat, harga);
                
                LocalDate orderDate = order.getOrderDate().toLocalDate();
                
                if (orderDate.isEqual(today)) {
                    ordersToday.add(order);
                }
                
                if (!orderDate.isBefore(startOfWeek) && orderDate.isBefore(today.plusDays(1))) {
                    ordersThisWeek.add(order);
                }
                
                if (!orderDate.isBefore(startOfMonth) && orderDate.isBefore(today.plusDays(1))) {
                    ordersThisMonth.add(order);
                }
                
                table.addRow(new String[] {id, tanggal.toString(), nama, noHp, status, layanan, berat, "Rp. " + Order.formatWithThousandSeparator(harga)});
            }
        } catch (SQLException e) {
            System.err.println("SQLException : " + e.getMessage());
        }
        
        todayField.setText("Rp. " + Order.formatWithThousandSeparator(getTotalIncome(ordersToday)));
        weekField.setText("Rp. " + Order.formatWithThousandSeparator(getTotalIncome(ordersThisWeek)));
        monthField.setText("Rp. " + Order.formatWithThousandSeparator(getTotalIncome(ordersThisMonth)));
        orderTable.setModel(table);
    }

    private int getTotalIncome(List<Order> orders) {
        int totalIncome = 0;
    
        for (Order order : orders) {
            totalIncome += order.getPrice();
        }
    
        return totalIncome;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.datechooser.DateChooser dateChooser;
    private com.aqul.pbolaundry.palette.Custom_JTextFieldRounded dateChooserField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel monthField;
    private javax.swing.JLabel monthIcon;
    private javax.swing.JLabel monthLabel;
    private com.aqul.pbolaundry.palette.Custom_JPanelRounded monthPanel;
    private com.aqul.pbolaundry.palette.Custom_JTable orderTable;
    private com.aqul.pbolaundry.palette.Custom_JButtonRounded printButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel todayField;
    private javax.swing.JLabel todayIcon;
    private javax.swing.JLabel todayLabel;
    private com.aqul.pbolaundry.palette.Custom_JPanelRounded todayPanel;
    private javax.swing.JLabel weekField;
    private javax.swing.JLabel weekIcon;
    private javax.swing.JLabel weekLabel;
    private com.aqul.pbolaundry.palette.Custom_JPanelRounded weekPanel;
    // End of variables declaration//GEN-END:variables
}
